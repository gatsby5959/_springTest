package com.ezen.myProject.service;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.ezen.myProject.domain.MemberVO;
import com.ezen.myProject.repository.MemberDAO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class MemberServiceImpl implements MemberService {

	@Inject
	private MemberDAO mdao;

	//password Encode 하기 위한 security 디펜던시 추가.
	
	@Override
	public int signup(MemberVO mvo) {
		log.info("멤버 check 2 "+mvo);
		//아이디가 중복되면 회원가입 실패
		// 중복이 아니라면 아이디를 주고 DB에서 일치하는 유저를 달라고 요청함
		// 일치하는 유저가 없다면 가입1 유저가 없으면 실패0
		MemberVO temp = mdao.getUser(mvo.getId());
		if(temp != null) {
			return 0;
		}
		
		//아이디가 중복되지 않아서 회원가입을 진행~!!
		//여기를 내가 함
		//password가 null이면, 혹은 값이 없다면... 가입 불가
		if(mvo.getId()==null || mvo.getId() == "") {
			return 0;
		}
		if(mvo.getPw()==null || mvo.getPw() == "") {
			return 0;
		}
		
		//회원가입 진행
		//암호화(encodeing)
		
		return mdao.insert(mvo);
		
	}
}
